Tree Terminology
Root: top node without parent 
Edge: a link between parent and child
Leaf: a node which does not have children 
Sibling: children of same parent 
Ancestor: a parent, grandparent, great grandparent of a node
Depth of node: a length of the path from root to node. The length of measured in the number of edges
Height of node: a length of the path from the node to the deepest node connected to it by some path/ This length is measured by the number of edges.
Depth of the tree: depth of the root node. Always zero
Height of the tree: height of the root node.


First type of binary tree: Full Binary Tree: Each node had either 0 or 2 children. No node has 1 child

Perfect Binary Tree: Every node other than the leaf node had exactly two children.
All Leaf notes are at the same level.
The definition of a perfect binary tree is very rigid.
Each binary tree has exactly 2^(h+1) - 1 nodes, where h is the height of the tree
Also, in a perfect binary tree, the number of leaf nodes is exactly half the number of total nodes plus one. 
ie. (n+1)/2 leaf nodes in a tree with n nodes.

Complete binary tree is a special type of binary tree in which every level, except possibly the last, is completely filled.
If the last level is not filled, then all nodes are as far left as possible.

A balanced binary tree: a binary tree where all leaf nodes are the same distance from the root not


The deepest node a binary tree is the last node we reach after doing level order traversal 


There are multiple ttype of tree search. 
1. Depth First Search
1.a. Preorder traversal
1.b. Inorder Traversal 
1.c. Postorder Traversal 
2. Breadth First Search
2.a. Level Order Traversal 

In Preorder Traversal, we visit root node, then the left subtree, then the right subtree
Inorder traversal, we visit left subtree, then root node, then right subtree
Postorder traversal, we visit left subtree, right subtree, then root node

In level order traversal, we visit each level from left to right